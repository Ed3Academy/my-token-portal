import Head from "next/head";
import styles from "../styles/Home.module.css";
import { ConnectButton } from "@rainbow-me/rainbowkit";
import MyTokenABI from "../abi/MyToken.json";
import {
  useContractRead,
  useAccount,
  usePrepareContractWrite,
  useContractWrite,
  useWaitForTransaction
} from "wagmi";
import { useState, useEffect } from "react";

const abi = MyTokenABI.abi;
const contractAddress = "0xe7eF8d5C50fD89AaFF85384D50774aB15f0652FC";

const Home = () => {
  const { address } = useAccount();
  const [mounted, setMounted] = useState(false);

  const { data: balance } = useContractRead({
    address: contractAddress,
    abi,
    functionName: "balanceOf",
    args: [address],
  });

  const { data: totalSupply } = useContractRead({
    address: contractAddress,
    abi,
    functionName: "totalSupply",
  });

  const { config } = usePrepareContractWrite({
    address: contractAddress,
    abi,
    functionName: "mint",
  });
  const { data, write: mint } = useContractWrite(config);
  const { isError, isLoading, isSuccess } = useWaitForTransaction({
    hash: data?.hash,
  });

  useEffect(() => {
    setMounted(true);
  }, []);

  if (!mounted) {
    return null;
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>My Token Portal</title>
        <meta
          name="description"
          content="Generated by @rainbow-me/create-rainbowkit"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />
        <h2>My Token</h2>
        <div className={styles.card}>
          <div>Balance</div>
          {balance && <div>{Number(balance)}</div>}
        </div>
        <div className={styles.card}>
          <div>Total Supply</div>
          {totalSupply && <div>{Number(totalSupply)}</div>}
        </div>
        <div className={styles.card}>
          <div>Mint</div>
          <div>
            <button
              onClick={() => {
                mint?.();
              }}
            >
              Confirm
            </button>
          </div>
          {isSuccess && <div>Mint success</div>}
          {isError && <div>Mint error</div>}
        </div>
      </main>
    </div>
  );
};

export default Home;
